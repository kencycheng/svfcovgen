cp_rxpkt_len: coverpoint bm.pktpkt_en {
  per_instance = 1;
  at_least  = 10;
  bins           min = { 64 };
  bins      mornal[] = { [65:1517] };
  bins           max = { 1518 };
  bins      oversize = { [1519:$] };
} 

cp_port_en: coverpoint port_en {
  goal = 100;
  comment = to cover port enable;
  bins    port_en0_1 = { 6'b?????1 };
  bins    port_en0_0 = { 6'b?????0 };
  bins    port_en1_1 = { 6'b????1? };
  bins    port_en1_0 = { 6'b????0? };
  bins    port_en2_1 = { 6'b???1?? };
  bins    port_en2_0 = { 6'b???0?? };
  bins    port_en3_1 = { 6'b??1??? };
  bins    port_en3_0 = { 6'b??0??? };
  bins    port_en4_1 = { 6'b?1???? };
  bins    port_en4_0 = { 6'b?0???? };
  bins    port_en5_1 = { 6'b1????? };
  bins    port_en5_0 = { 6'b0????? };
  bins        all_on = { 6'b111111 };
} 

cp_speed: coverpoint speed iff(link) {
  bins           10M = { 2'b00 };
  bins          100M = { 'b10 };
  bins            1G = { 'h2 };
  bins          500M = { 2'b11 };
} 

cp_vlan_en: coverpoint vlan_en;

cp_spinore_ser_format: coverpoint {sc_reg_obj.spic_ctrlr0_scpol, sc_reg_obj.spic_ctrlr0_scph} {
  bins        mode_0 = { 2'b00 };
  bins        mode_1 = { 2'b01 };
} 

cc_pktlen_port_en: coverpoint pkt_len, port_en {
  ignore_bins     ingore00 = binsof(cp_rxpkt_len.oversize);
} 

